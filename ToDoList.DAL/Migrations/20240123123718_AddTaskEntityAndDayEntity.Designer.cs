// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ToDoList.DAL.Data;

#nullable disable

namespace ToDoList.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240123123718_AddTaskEntityAndDayEntity")]
    partial class AddTaskEntityAndDayEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ToDoList.Domain.Entity.DayEntity", b =>
                {
                    b.Property<int>("DayEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DayEntityId"));

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DayEntityId");

                    b.ToTable("Days");
                });

            modelBuilder.Entity("ToDoList.Domain.Entity.TaskEntity", b =>
                {
                    b.Property<long>("TaskEntityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TaskEntityId"));

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DayEntityId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("TaskEntityId");

                    b.HasIndex("DayEntityId");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("ToDoList.Domain.Entity.TaskEntity", b =>
                {
                    b.HasOne("ToDoList.Domain.Entity.DayEntity", "DayEntity")
                        .WithMany("TaskList")
                        .HasForeignKey("DayEntityId");

                    b.Navigation("DayEntity");
                });

            modelBuilder.Entity("ToDoList.Domain.Entity.DayEntity", b =>
                {
                    b.Navigation("TaskList");
                });
#pragma warning restore 612, 618
        }
    }
}
